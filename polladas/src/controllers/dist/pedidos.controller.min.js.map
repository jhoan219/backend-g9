{"version":3,"sources":["pedidos.controller.js"],"names":["_prisma","require","crearPedido","req","res","data","pedidos","regeneratorRuntime","async","_context","prev","next","body","awrap","Prisma","cabeceraPedido","create","clienteId","fechaEmision","pedidoDetalle","select","detalles","id","sent","abrupt","cantidad","json","producto","t0","status","message","valorVenta","stop"],"mappings":"+FAAA,IAAAA,QAAAC,QAAA,gBAEaC,YAAc,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACnBN,EAAOF,EAAIS,KADQH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,MAGDC,QAAAA,OAAOC,eAAeC,OAAO,CACjDX,KAAM,CANZY,UAAAZ,EAAAY,UAQQC,aAAcb,EAAKa,aANdhB,SAAc,CAAAc,OAAAX,EAAAc,gBAAAC,OAAA,CAAAH,WAAA,EACnBZ,cAAWO,EADQS,SAAA,CAAAD,OAAA,CAAAE,IAAA,EAIrBjB,UAAM,EACJY,SAAAA,CACAC,OAAAA,CACAG,IAAAA,EACEL,QAAQX,IAGZe,YAAQ,QAXa,KAAA,EAAA,OAGjBd,EAHiBG,EAAAc,KAAAd,EAAAe,OAAA,SAiBfC,EAAAA,OAAAA,KAAQC,KAFF,CAGNC,QAAAA,oBACEP,QAAAA,KAnBa,KAAA,EAAA,OAAAX,EAAAC,KAAA,EAAAD,EAAAmB,GAAAnB,EAAA,MAAA,GAAAA,EAAAe,OAAA,SAmBLpB,EAAAyB,OAAA,KAAAH,KAAA,CADAI,QAAA,uBAMVC,MAAAA,EAAAA,GAAAA,WAxBe,KAAA,GAAA,IAAA,MAAA,OAAAtB,EAAAuB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"pedidos.controller.min.js","sourcesContent":["import { Prisma } from \"../prisma.js\";\r\n\r\nexport const crearPedido = async (req, res) => {\r\n  const data = req.body;\r\n  try {\r\n    const pedidos = await Prisma.cabeceraPedido.create({\r\n      data: {\r\n        clienteId: data.clienteId,\r\n        fechaEmision: data.fechaEmision,\r\n        detalles: {\r\n          create: data.pedidoDetalle,\r\n        },\r\n      },\r\n      select: {\r\n        clienteId: true,\r\n        fechaEmision: true,\r\n        detalles: {\r\n          select: {\r\n            id: true,\r\n            cantidad: true,\r\n            producto: {\r\n              select: {\r\n                id: true,\r\n                nombre: true,\r\n              },\r\n            },\r\n            valorVenta: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return res.status(201).json({\r\n      message: \"Pedido registrado\",\r\n      content: pedidos,\r\n    });\r\n  } catch (error) {\r\n    return res.status(500).json({\r\n      message: \"Error en el servidor\",\r\n      error: error.message,\r\n    });\r\n  }\r\n};"]}