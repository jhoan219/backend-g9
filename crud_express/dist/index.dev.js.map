{"version":3,"sources":["index.js"],"names":["servidor","productos","nombre","precio","disponible","get","req","res","console","log","status","json","message","route","productoDisponibles","filter","producto","content","post","body","data","push","listen"],"mappings":";;;;AAAA;;;;;;AAEA,IAAMA,QAAQ,GAAG,0BAAjB,C,CACA;AACA;;AAEA,IAAMC,SAAS,GAAG,CACd;AACEC,EAAAA,MAAM,EAAE,SADV;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,UAAU,EAAE;AAHd,CADc,EAMd;AACEF,EAAAA,MAAM,EAAE,SADV;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,UAAU,EAAE;AAHd,CANc,EAWd;AACEF,EAAAA,MAAM,EAAE,eADV;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,UAAU,EAAE;AAHd,CAXc,EAgBd;AACEF,EAAAA,MAAM,EAAE,YADV;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,UAAU,EAAE;AAHd,CAhBc,CAAlB;AAuBAJ,QAAQ,CAACK,GAAT,CAAa,GAAb,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAF,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,OAAO,EAAE;AADU,GAArB;AAGD,CANH;AAQEZ,QAAQ,CACPa,KADD,CACO,YADP,EAECR,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB;AACA,MAAMO,mBAAmB,GAAGb,SAAS,CAACc,MAAV,CAAiB,UAACC,QAAD,EAAc;AACzD,WAAOA,QAAQ,CAACZ,UAAT,KAAwB,IAA/B;AACD,GAF2B,CAA5B;AAIAG,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBM,IAAAA,OAAO,EAAEH;AADU,GAArB;AAGD,CAXD,EAYCI,IAZD,CAYM,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACa,IAAhB;AACA,MAAMC,IAAI,GAAGd,GAAG,CAACa,IAAjB;AAEAlB,EAAAA,SAAS,CAACoB,IAAV,CAAeD,IAAf;AAEAb,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,IAAAA,OAAO,EAAE;AADU,GAArB;AAGD,CArBD;AAuBFZ,QAAQ,CAACsB,MAAT,CAAgB,IAAhB,EAAsB,YAAM;AAC1Bd,EAAAA,OAAO,CAACC,GAAR;AACD,CAFD","sourcesContent":["import express, { json } from \"express\";\r\n\r\nconst servidor = express();\r\n// use > sirve para agregar un middleware que validara la informacion dependiendo el orden en el que lo coloquemos\r\n// llegue inforsmacion en formato JSON este middleware lo pueda convertir en una informacion legible y lo almacene en el req.body\r\n\r\nconst productos = [\r\n    {\r\n      nombre: \"pollada\",\r\n      precio: 15.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"adobada\",\r\n      precio: 15.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"chichorranada\",\r\n      precio: 17.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"chuleteada\",\r\n      precio: 12.5,\r\n      disponible: false,\r\n    },\r\n  ];\r\n\r\nservidor.get(\"/\", (req, res) => {\r\n    console.log(\"Entro aqui\");\r\n  \r\n    res.status(200).json({\r\n      message: \"Bienvenido a mi API de express\",\r\n    });\r\n  });\r\n\r\n  servidor\r\n  .route(\"/productos\")\r\n  .get((req, res) => {\r\n    // devuelve todos los productos que esten disponible solo puedes utilizar el metodo filter\r\n    const productoDisponibles = productos.filter((producto) => {\r\n      return producto.disponible === true;\r\n    });\r\n\r\n    res.status(200).json({\r\n      content: productoDisponibles,\r\n    });\r\n  })\r\n  .post((req, res) => {\r\n    console.log(req.body);\r\n    const data = req.body;\r\n\r\n    productos.push(data);\r\n\r\n    res.status(201).json({\r\n      message: \"Producto creado exitosamente\",\r\n    });\r\n  });\r\n\r\nservidor.listen(5000, () => {\r\n  console.log(`Servidor corriendo exitosamente en el puerto 5000`);\r\n});"],"file":"index.dev.js"}