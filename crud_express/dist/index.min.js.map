{"version":3,"sources":["index.js"],"names":["_express","_interopRequireWildcard","require","servidor","productos","nombre","precio","disponible","get","req","res","log","status","json","message","route","productoDisponibles","producto","filter","content","console","body","data","push","listen"],"mappings":"8PAAA,IAAAA,SAAAC,wBAAAC,QAAA,2nBAEA,IAAMC,UAAW,EAAAH,SAAA,WAIXI,UAAY,CACd,CACEC,OAAQ,UACRC,OAAQ,KAPRH,YAAW,GAUb,CANEC,OAAS,UAETC,OAAQ,KACRC,YAFF,GAKA,CACED,OAAQ,gBACRC,OAFF,KAGEC,YAAY,GAGZF,CACAC,OAFF,aAGEC,OAAY,KAEdA,YAAA,IAAAJ,SAhBJK,IAAA,IAAA,SAAAC,EAAAC,GAuBAP,QAAAQ,IAAA,cAGID,EAAIE,OAAO,KAAKC,KAAK,CACnBC,QAAS,qCAOXX,SACAY,MAAMC,cACJR,IAAA,SAAAC,EAAOQ,GAGTP,IAAIE,EAAiBR,UAAAc,OAAA,SAAAD,GACnBE,OAASH,IAAAA,EAAAA,aAIXI,EAAAA,OAAYX,KAAIY,KAAhB,CACMC,QAAOb,MAKXK,KAAAA,SAAAA,EAASJ,GADXU,QAAAT,IAAAF,EAAAY,MAlBF,IAAAC,EAAAb,EAAAY,KAwBAD,UAAAG,KAAAD,GANEZ,EAAIE,OAAO,KAAKC,KAAK,CACnBC,QAAS,mCAIfX,SAASqB,OAAO,IAAM,WACpBJ,QAAQT,IAAR","file":"index.min.js","sourcesContent":["import express, { json } from \"express\";\r\n\r\nconst servidor = express();\r\n// use > sirve para agregar un middleware que validara la informacion dependiendo el orden en el que lo coloquemos\r\n// llegue inforsmacion en formato JSON este middleware lo pueda convertir en una informacion legible y lo almacene en el req.body\r\n\r\nconst productos = [\r\n    {\r\n      nombre: \"pollada\",\r\n      precio: 15.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"adobada\",\r\n      precio: 15.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"chichorranada\",\r\n      precio: 17.5,\r\n      disponible: true,\r\n    },\r\n    {\r\n      nombre: \"chuleteada\",\r\n      precio: 12.5,\r\n      disponible: false,\r\n    },\r\n  ];\r\n\r\nservidor.get(\"/\", (req, res) => {\r\n    console.log(\"Entro aqui\");\r\n  \r\n    res.status(200).json({\r\n      message: \"Bienvenido a mi API de express\",\r\n    });\r\n  });\r\n\r\n  servidor\r\n  .route(\"/productos\")\r\n  .get((req, res) => {\r\n    // devuelve todos los productos que esten disponible solo puedes utilizar el metodo filter\r\n    const productoDisponibles = productos.filter((producto) => {\r\n      return producto.disponible === true;\r\n    });\r\n\r\n    res.status(200).json({\r\n      content: productoDisponibles,\r\n    });\r\n  })\r\n  .post((req, res) => {\r\n    console.log(req.body);\r\n    const data = req.body;\r\n\r\n    productos.push(data);\r\n\r\n    res.status(201).json({\r\n      message: \"Producto creado exitosamente\",\r\n    });\r\n  });\r\n\r\nservidor.listen(5000, () => {\r\n  console.log(`Servidor corriendo exitosamente en el puerto 5000`);\r\n});"]}