{"version":3,"sources":["usuarioModel.js"],"names":["direccionSchema","mongoose","Schema","calle","Types","String","numero","codigoPostal","alias","type","_id","usuarioSchema","nombre","required","email","unique","password","direcciones","agendas","ObjectId","ref","timestamps","createdAt","updatedAt","Usuario","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,eAAe,GAAG,IAAIC,qBAASC,MAAb,CACtB;AACEC,EAAAA,KAAK,EAAEF,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,MAD/B;AAEEC,EAAAA,MAAM,EAAEL,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,MAFhC;AAGEE,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,eADK;AACY;AACxBC,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC;AAFhB;AAHhB,CADsB,EAStB;AACEK,EAAAA,GAAG,EAAE,KADP,CACc;;AADd,CATsB,CAAxB;AAcA,IAAMC,aAAa,GAAG,IAAIV,qBAASC,MAAb,CACpB;AACEU,EAAAA,MAAM,EAAE;AACNH,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,MADtB;AAENQ,IAAAA,QAAQ,EAAE;AAFJ,GADV;AAKEC,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,MADvB;AAELU,IAAAA,MAAM,EAAE,IAFH;AAGLF,IAAAA,QAAQ,EAAE;AAHL,GALT;AAUEG,EAAAA,QAAQ,EAAE;AACRP,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,MADpB;AAERQ,IAAAA,QAAQ,EAAE;AAFF,GAVZ;AAcEI,EAAAA,WAAW,EAAE,CAACjB,eAAD,CAdf;AAeE;AACAkB,EAAAA,OAAO,EAAE,CAAC;AAAET,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBE,KAAhB,CAAsBe,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C,GAAD;AAhBX,CADoB,EAmBpB;AACE;AACAC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,eADD;AAEVC,IAAAA,SAAS,EAAE;AAFD;AAFd,CAnBoB,CAAtB;;AA4BO,IAAMC,OAAO,GAAGvB,qBAASwB,KAAT,CAAe,UAAf,EAA2Bd,aAA3B,CAAhB","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst direccionSchema = new mongoose.Schema(\r\n  {\r\n    calle: mongoose.Schema.Types.String,\r\n    numero: mongoose.Schema.Types.String,\r\n    codigoPostal: {\r\n      alias: \"codigo_postal\", // indicar como se llamara esta columna en la bd\r\n      type: mongoose.Schema.Types.String,\r\n    },\r\n  },\r\n  {\r\n    _id: false, // esto solo se puede dar en sub documentos\r\n  }\r\n);\r\n\r\nconst usuarioSchema = new mongoose.Schema(\r\n  {\r\n    nombre: {\r\n      type: mongoose.Schema.Types.String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: mongoose.Schema.Types.String,\r\n      unique: true,\r\n      required: true,\r\n    },\r\n    password: {\r\n      type: mongoose.Schema.Types.String,\r\n      required: true,\r\n    },\r\n    direcciones: [direccionSchema],\r\n    // creamos ahora la relacion VIRTUAL entre los usuarios y sus agendas\r\n    agendas: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Agenda\" }],\r\n  },\r\n  {\r\n    // https://mongoosejs.com/docs/guide.html#options\r\n    timestamps: {\r\n      createdAt: \"fechaCreacion\",\r\n      updatedAt: \"fechaActualizacion\",\r\n    },\r\n  }\r\n);\r\n\r\nexport const Usuario = mongoose.model(\"usuarios\", usuarioSchema);"],"file":"usuarioModel.dev.js"}