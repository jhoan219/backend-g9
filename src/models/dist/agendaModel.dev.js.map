{"version":3,"sources":["agendaModel.js"],"names":["agendaSchema","mongoose","Schema","asunto","type","Types","String","required","maxlength","dia","Date","horaInicio","alias","validate","validator","valor","test","message","horaFin","usuario","ObjectId","ref","Agenda","model"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,YAAY,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,MADtB;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAD+B;AAMvCC,EAAAA,GAAG,EAAE;AACHL,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBK,IADzB;AAEHH,IAAAA,QAAQ,EAAE;AAFP,GANkC;AAUvCI,EAAAA,UAAU,EAAE;AACVP,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,MADlB;AAEVC,IAAAA,QAAQ,EAAE,IAFA;AAGVK,IAAAA,KAAK,EAAE,aAHG;AAIVC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,eAAO,oCAAoCC,IAApC,CAAyCD,KAAzC,CAAP;AACD,OAHO;AAIRE,MAAAA,OAAO,EAAE;AAJD;AAJA,GAV2B;AAqBvCC,EAAAA,OAAO,EAAE;AACPd,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBC,MADrB;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPK,IAAAA,KAAK,EAAE,UAHA;AAIPC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,eAAO,oCAAoCC,IAApC,CAAyCD,KAAzC,CAAP;AACD,OAHO;AAIRE,MAAAA,OAAO,EAAE;AAJD;AAJH,GArB8B;AAgCvC;AACAE,EAAAA,OAAO,EAAE;AACPf,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBG,KAAhB,CAAsBe,QADrB;AAEPC,IAAAA,GAAG,EAAE;AAFE;AAjC8B,CAApB,CAArB;;AAuCO,IAAMC,MAAM,GAAGrB,qBAASsB,KAAT,CAAe,SAAf,EAA0BvB,YAA1B,CAAf","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst agendaSchema = new mongoose.Schema({\r\n  asunto: {\r\n    type: mongoose.Schema.Types.String,\r\n    required: true,\r\n    maxlength: 100,\r\n  },\r\n  dia: {\r\n    type: mongoose.Schema.Types.Date,\r\n    required: true,\r\n  },\r\n  horaInicio: {\r\n    type: mongoose.Schema.Types.String,\r\n    required: true,\r\n    alias: \"hora_inicio\",\r\n    validate: {\r\n      validator: (valor) => {\r\n        return /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(valor);\r\n      },\r\n      message: \"Error, el formato debe ser HH:MM\",\r\n    },\r\n  },\r\n  horaFin: {\r\n    type: mongoose.Schema.Types.String,\r\n    required: true,\r\n    alias: \"hora_fin\",\r\n    validate: {\r\n      validator: (valor) => {\r\n        return /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/.test(valor);\r\n      },\r\n      message: \"Error, el formato debe ser HH:MM\",\r\n    },\r\n  },\r\n  // es una columna que servira para hacer la relacion a nivel de mongoose para poder vincular la agenda con el usuario\r\n  usuario: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"Usuario\",\r\n  },\r\n});\r\n\r\nexport const Agenda = mongoose.model(\"agendas\", agendaSchema);"],"file":"agendaModel.dev.js"}